<!DOCTYPE html>
<html lang="en">
<head>
<meta charset="UTF-8" />
<meta name="viewport" content="width=device-width, initial-scale=1" />
<title>Basic To-Do App</title>
<style>
  body {
    font-family: Arial, sans-serif;
    margin: 2rem;
    background: #f0f0f0;
  }
  h1 {
    text-align: center;
  }
  #newListForm, #newTaskForm {
    margin-bottom: 1rem;
  }
  input, button, select {
    padding: 0.5rem;
    margin-right: 0.5rem;
    font-size: 1rem;
  }
  .list-container {
    background: white;
    padding: 1rem;
    margin-bottom: 1.5rem;
    border-radius: 5px;
  }
  .list-header {
    display: flex;
    justify-content: space-between;
    align-items: center;
  }
  ul {
    list-style: none;
    padding-left: 0;
  }
  li {
    background: #eee;
    margin: 0.5rem 0;
    padding: 0.5rem;
    border-radius: 3px;
    display: flex;
    justify-content: space-between;
    align-items: center;
  }
  li.completed {
    text-decoration: line-through;
    color: gray;
  }
  .task-info {
    flex-grow: 1;
    margin-right: 1rem;
  }
  .task-actions button {
    margin-left: 0.3rem;
  }
  .date-time {
    font-size: 0.8rem;
    color: #555;
    margin-top: 0.2rem;
  }
</style>
</head>
<body>

<h1>Basic To-Do App</h1>

<div id="newListForm">
  <input type="text" id="listNameInput" placeholder="New list name" />
  <button onclick="addList()">Add List</button>
</div>

<div id="listsContainer"></div>

<script>
  let lists = [];

  function addList() {
    const name = document.getElementById('listNameInput').value.trim();
    if (!name) {
      alert('List name cannot be empty');
      return;
    }
    lists.push({ name, tasks: [] });
    document.getElementById('listNameInput').value = '';
    renderLists();
  }

  function addTask(listIndex) {
    const taskInput = document.getElementById(`taskInput-${listIndex}`);
    const dateInput = document.getElementById(`dateInput-${listIndex}`);
    const timeInput = document.getElementById(`timeInput-${listIndex}`);

    const taskText = taskInput.value.trim();
    if (!taskText) {
      alert('Task cannot be empty');
      return;
    }

    lists[listIndex].tasks.push({
      text: taskText,
      completed: false,
      date: dateInput.value || null,
      time: timeInput.value || null
    });

    taskInput.value = '';
    dateInput.value = '';
    timeInput.value = '';
    renderLists();
  }

  function toggleComplete(listIndex, taskIndex) {
    lists[listIndex].tasks[taskIndex].completed = !lists[listIndex].tasks[taskIndex].completed;
    renderLists();
  }

  function deleteTask(listIndex, taskIndex) {
    if (confirm('Delete this task?')) {
      lists[listIndex].tasks.splice(taskIndex, 1);
      renderLists();
    }
  }

  function editTask(listIndex, taskIndex) {
    const task = lists[listIndex].tasks[taskIndex];
    const newText = prompt('Edit task text:', task.text);
    if (newText !== null) {
      task.text = newText.trim() || task.text;
    }

    const newDate = prompt('Edit date (YYYY-MM-DD):', task.date || '');
    if (newDate !== null) {
      task.date = newDate.trim() || null;
    }

    const newTime = prompt('Edit time (HH:MM):', task.time || '');
    if (newTime !== null) {
      task.time = newTime.trim() || null;
    }
    renderLists();
  }

  function renderLists() {
    const container = document.getElementById('listsContainer');
    container.innerHTML = '';

    lists.forEach((list, i) => {
      const div = document.createElement('div');
      div.className = 'list-container';

      const header = document.createElement('div');
      header.className = 'list-header';
      header.innerHTML = `<h2>${list.name}</h2>`;
      div.appendChild(header);

      // New task form
      const taskForm = document.createElement('div');
      taskForm.innerHTML = `
        <input type="text" id="taskInput-${i}" placeholder="New task" />
        <input type="date" id="dateInput-${i}" />
        <input type="time" id="timeInput-${i}" />
        <button onclick="addTask(${i})">Add Task</button>
      `;
      div.appendChild(taskForm);

      // Tasks list
      const ul = document.createElement('ul');
      list.tasks.forEach((task, j) => {
        const li = document.createElement('li');
        if (task.completed) li.classList.add('completed');

        const taskInfo = document.createElement('div');
        taskInfo.className = 'task-info';

        let taskText = task.text;
        if (task.date) taskText += ` | 📅 ${task.date}`;
        if (task.time) taskText += ` ⏰ ${task.time}`;
        taskInfo.textContent = taskText;

        li.appendChild(taskInfo);

        const actions = document.createElement('div');
        actions.className = 'task-actions';

        // Complete button
        const completeBtn = document.createElement('button');
        completeBtn.textContent = task.completed ? 'Undo' : 'Complete';
        completeBtn.onclick = () => toggleComplete(i, j);
        actions.appendChild(completeBtn);

        // Edit button
        const editBtn = document.createElement('button');
        editBtn.textContent = 'Edit';
        editBtn.onclick = () => editTask(i, j);
        actions.appendChild(editBtn);

        // Delete button
        const deleteBtn = document.createElement('button');
        deleteBtn.textContent = 'Delete';
        deleteBtn.onclick = () => deleteTask(i, j);
        actions.appendChild(deleteBtn);

        li.appendChild(actions);

        ul.appendChild(li);
      });

      div.appendChild(ul);
      container.appendChild(div);
    });
  }
</script>

</body>
</html>
